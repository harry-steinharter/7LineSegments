library(ggpattern)
library(ggsignif)
library(viridis)
library(xtable)
library(lme4)
library(lmerTest)
library(afex)
dfFull <- read.csv("glmDataRaw7LS.csv")
dfFull$CondShort %<>% as.factor
dfMean <- read.csv('subjectMeansByTCFactorRaw7LS.csv')
dfMean$CondShort %<>% as.factor
dfOverallMean <- read.csv('subjectMeansOverallRaw7LS.csv')
dfOverallMean$CondShort %<>% as.factor
#### Perform GLM ####
conds <- levels(dfFull$CondShort)
Formula <- "Correct_Response ~ TC_michelson_c * CondShort + (1|Participant_Number)"
Contrasts <- list(CondShort = contr.treatment(conds, which(conds == 'Single')))
model_glm <- glmer(
formula = Formula,
family = binomial(link='logit'),
data = dfFull,
contrasts = Contrasts,
weights = weights,
control = glmerControl(optimizer = "bobyqa", optCtrl = list(maxfun = 1e5),
check.conv.grad = .makeCC("warning", tol = 0.005, relTol = NULL)),
)
dfFull$probability <- predict(model_glm,type='response', re.form = NA) # re.form=NA is fixed effects only. =NULL is both
# Likelihood Ratio test
#model_LRT <-  car::Anova(model_glm,type = 3, test.statistic = 'LR')
model_LRT <- afex::mixed(
formula = Formula,
data = dfFull,
family = binomial(link = 'logit'),
method = "LRT",  # Type III tests via LRT
type = 3,
control = glmerControl(optimizer = "bobyqa", optCtrl = list(maxfun = 1e5),
check.conv.grad = .makeCC("warning", tol = 0.005, relTol = NULL))
)
# CI's #
model_CIs <- lme4::confint.merMod(model_glm, method = 'Wald', parm = 'beta_')
# Make the output DF better and Print it #
model_df <- broom.mixed::tidy(model_glm,effects='fixed') %>% as.data.frame()
model_df <- model_df[-1]
model_df %<>% cbind(.,exp(model_CIs))
model_df %<>%  tibble::add_column('Odds Scale'= exp(model_df$estimate), .after = 2)
model_df$term %<>% gsub("CondShort","",.)
model_df$term %<>% gsub("_michelson_c","",.)
rownames(model_df) <- model_df$term
model_df <- model_df[-1]
newCols <- c('Est.','Odds','SE','z','p','2.5\\%','97.5\\%')
colnames(model_df) <- newCols
for (col in colnames(model_df)){
model_df[[col]] %<>% sprintf("%.2e",.)
}
model_df %>% xtable(
auto = TRUE,
align = c('l','r','r','r','r','r','r','r'),
digits = 3,
label = "table:Exp3GLM",
caption = c("Caption Here","Exp 3: GLM"),) %>%
print(
include.rownames = T,
type = 'latex',
file = "/Users/harrysteinharter/Documents/LaTex/ThesisV2/tables3/Exp3GLM.tex",)
## LRT printing ##
LRT_print <- model_LRT$anova_table
rownames(LRT_print) %<>% gsub("_michelson_c","",.)
rownames(LRT_print) %<>%gsub("CondShort","Flankers",.)
LRT_print$`Pr(>Chisq)` %<>% sprintf("%.2e",.)
print(
xtable(
LRT_print,
align = c('l','r','r','r','r'),
auto = TRUE,
label = "table:Exp3LRT",
caption = c("Caption Here","Exp 3: LRT"),
digits = 2
),
include.rownames = T,
type = 'latex',
file = "/Users/harrysteinharter/Documents/LaTex/ThesisV2/tables3/Exp3LRT.tex",
)
model_TC <- lmer(
data = dfFull,
formula = "TC_michelson_c ~ WidthGroup*ExpectedGroup + (1|Participant_Number)",
weights = weights
)
model_EM <- emmeans::emmeans(model_TC, specs = ~ExpectedGroup*WidthGroup, type = 'response', pbkrtest.limit = 1e5)
AnovaTC <- Anova(model_TC,type=3)
EM_pairs <- pairs(model_EM)
EM_pairs_df <- EM_pairs %>% as.data.frame()
#### Now format the printing of the Anova and Emmeanns
colnames(EM_pairs_df) <- c('Comparison','Est.','SE','df','t-ratio','p')
EM_pairs_df$Comparison %<>% gsub("low","D",.)
EM_pairs_df$Comparison %<>% gsub("high","I",.)
EM_pairs_df$Comparison %<>% gsub("wide","W",.)
EM_pairs_df$Comparison %<>% gsub("narrow","N",.)
EM_pairs_df$Comparison %<>% gsub("D controls","Single",.)
EM_pairs_df$Comparison %<>% gsub("I controls","Constant",.)
EM_pairs_df$Comparison %<>% gsub(" ","",.)
EM_pairs_df$Comparison %<>% gsub("-"," - ",.)
EM_signif_df <- subset(EM_pairs_df, p <= 0.05)
for (i in c(2,3,6)){
EM_pairs_df[[i]] %<>% sprintf("%.2e",.)
EM_signif_df[[i]] %<>% sprintf("%.2e",.)
}
EM_pairs_df$`t-ratio` %<>% sprintf("%.2f",.)
EM_signif_df$`t-ratio` %<>% sprintf("%.2f",.)
sink("/Users/harrysteinharter/Documents/LaTex/ThesisV2/tables3/Exp3Pairwise.tex")
EM_pairs_df %>% xtable(
align = c('c','l','r','r','r','r','r'),
label = "table:Exp3Pairwise",
caption = c("Caption Here","Exp 3: Pairwise"),
) %>% print(
type = 'latex',
include.rownames = F,)
sink("/Users/harrysteinharter/Documents/LaTex/ThesisV2/tables3/Exp3PairwiseSignif.tex")
EM_signif_df %>% xtable(
align = c('c','l','r','r','r','r','r'),
label = "table:Exp3PairwiseSignif",
caption = c("Caption Here","Exp 3: PairwiseSignif"),
) %>% print(
type = 'latex',
include.rownames = F,)
sink()
cV <- viridis(2, option = 'viridis')
colorPalette <- c('high' = cV[1], 'low' = cV[2])
colorPalette <- c('high' = 'firebrick', 'low' = 'dodgerblue')
palette3Way <- viridis(conds %>% length())
palette3Way %<>% setNames(.,conds)
factorCuts <- dfFull %>% subset(TC_factor == 'Medium', select = TC_michelson) %>% range()
ggplot(data = dfFull,
mapping = aes(x = TC_michelson, color = ExpectedGroup)
) + geom_line(
mapping = aes(y = probability, linetype = WidthGroup),
linewidth = 1.0
) + scale_x_continuous(
transform = 'log10'
) + scale_linetype_manual(
name = 'Conditions',
values = c(
'controls' = 'solid',
'narrow' = 'twodash',
'wide' = 'dotted'
),
labels = c('Controls','Narrow','Wide')
) + scale_color_manual(
values = colorPalette,
name = "Contrast",
labels = c('Increasing', 'Decreasing')
) + xlab(
'Target Contrast'
) + ylab(
'Probability of Detection'
) + theme_pubr(
) + theme(
legend.title = element_text(hjust = .5, vjust = .5),
text = element_text(size=16,family='times'),
legend.position = 'right'
) + geom_vline(xintercept = factorCuts, linetype = 'dotted')
ggsave(
filename = "/Users/harrysteinharter/Documents/LaTex/ThesisV2/images3/Exp3GLM.png",
units = 'in',
dpi = 500,
width = W <- 8,
height = W * (2/3)
)
ggplot(
data = dfOverallMean,
mapping = aes(x = factor(CondShort, c('Constant','IN','IW','Single','DN','DW')),
y = overall_mean, group = WidthGroup, linetype = WidthGroup)
) + stat_summary(
mapping = aes(color = ExpectedGroup, shape = WidthGroup),
geom = 'point',
fun = 'mean',
size = I(5),
) + stat_summary(
geom = 'errorbar',
fun.data = mean_cl_normal,
position = position_dodge(width = 0.9),
width = 0.2,
linetype = I('solid')
) + scale_color_manual(
values = colorPalette,
name = "Contrast",
labels = c('Increasing', 'Decreasing')
) + scale_shape_manual(
name = 'Conditions',
values = c(
'controls' = 15,
'narrow' = 16,
'wide' = 17),
labels = c('Controls','Narrow','Wide')
) + scale_x_discrete(
labels = c('Constant','IN','IW','Single','DN','DW')
) + theme_pubr(
) + theme(
legend.title = element_text(hjust = .5, vjust = .5),
text = element_text(size=16,family='times'),
legend.position = 'right'
) + ylab(
"Mean Target Contrast"
) + xlab(
"Condition"
)
ggsave(
filename = "/Users/harrysteinharter/Documents/LaTex/ThesisV2/images3/Exp3AnovaPlot.png",
units = 'in',
dpi = 500,
width = W <- 8,
height = W * (2/3)
)
model3way <- lmer(
data = dfFull,
formula = "Correct_Response ~ TC_factor * WidthGroup * ExpectedGroup + (1|Participant_Number)",
)
anova3way <- Anova(model3way,type = 3)
model_EMx3 <- emmeans::emmeans(model3way, specs = ~ExpectedGroup*WidthGroup|TC_factor,
type = 'response', pbkrtest.limit = 1e5)
EM_pairs_x3 <- pairs(model_EMx3)
EM_pairs_x3@grid$contrast %<>% gsub('low','D',.)
EM_pairs_x3@grid$contrast %<>% gsub('high','I',.)
EM_pairs_x3@grid$contrast %<>% gsub(' narrow','N',.)
EM_pairs_x3@grid$contrast %<>% gsub(' wide','W',.)
EM_pairs_x3@grid$contrast %<>% gsub(' wide','W',.)
EM_pairs_x3@grid$contrast %<>% gsub('I controls','Constant',.)
EM_pairs_x3@grid$contrast %<>% gsub('D controls','Single',.)
sink("/Users/harrysteinharter/Documents/LaTex/ThesisV2/tables3/Exp3Pairs3WayIntrxn.tex")
print(xtable(
EM_pairs_x3,
label = "table:Exp3Pairs3Way",
caption = c("Caption Here","Exp 3: Pairs3Way"),),
type = 'latex',)
sink()
ggplot(
data = dfMean,
mapping = aes(
x = factor(TC_factor,c('Low','Medium','High')), y = mean,
color = ExpectedGroup, shape = WidthGroup,
group = interaction(ExpectedGroup,WidthGroup))) +
stat_summary(
geom = 'point',
fun.data = mean_cl_normal,
position = position_dodge(.75),
size = I(5),) +
stat_summary(
geom = 'errorbar',
fun.data = mean_cl_normal,
position = position_dodge(.75),
width = 0.2,
linetype = I('solid'),
color = 'black') +
scale_color_manual(
values = colorPalette,
labels = c('Increasing','Decreasing'),
name = 'Contrast') +
scale_shape_manual(
values = list(
'controls' = 15,
'narrow' = 16,
'wide' = 17),
labels = c('Controls','Narrow','Wide'),
name = 'Condition') +
theme_pubr() +
theme(
legend.position = 'right',
legend.title = element_text(hjust = .5, vjust = .5),
text = element_text(family = 'times', size = 16)) +
xlab('Target Contrast') + ylab('Mean Response Rate') +
guides(
color = guide_legend(order = 1),
shape = guide_legend(order = 2))
ggsave(
filename = "/Users/harrysteinharter/Documents/LaTex/ThesisV2/images3/Exp3Anova3Way.png",
units = 'in',
dpi = 500,
width = W <- 8,
height = W * (2/3)
)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(magrittr)
library(eyelinker)
library(ivs)
asc <- read.asc('83.asc')
str(asc, max.level = 1)
msg <- asc$msg
button <- asc$button
sacc <- asc$sacc
button %<>% group_by( # Keep only 'easy' trials with the expected number of buttons
block) %>% mutate(nPer=n()) %>% ungroup() %>% subset(nPer == 4)
button$stim <- c('fix','fix','target','target') %>% rep(nrow(button)/4) %>% c() # What is presented
button %<>% subset(stim == 'target') # Keep only target
button_w <- button %>%
group_by(block) %>%
arrange(time, .by_group = TRUE) %>%
mutate(stimS = min(time), stimE = max(time)) %>%
ungroup() %>%
select(c('block','button','stim','stimS','stimE')) %>%
distinct()
sacc_IVs <- iv(sacc$stime,sacc$etime)
button_IVs <- iv(button_w$stimS,button_w$stimE)
locations <- iv_locate_overlaps(sacc_IVs,button_IVs)
IV_indexing <- locations[!is.na(locations$haystack),]
# Index the button_w df based on the index values of IV_indexing$haystack
button_w_saccade <- button_w[IV_indexing$haystack,]
saccade_w_button <- sacc[IV_indexing$needles,]
View(saccade_w_button)
View(button_w_saccade)
which(msg$block %in% blocks)
blocks <- saccade_w_button$block
which(msg$block %in% blocks)
which(msg$block %in% blocks)
which(msg$block == blocks)
which(msg$block == 1)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(magrittr)
library(eyelinker)
library(ivs)
which(msg$block == 1)
which(msg$block %in% blocks)
msg_w_saccades <- msg[which(msg$block %in% blocks),]
View(msg_w_saccades)
which("TRIAL_START" %in% msg_w_saccades$text)
contains(msg_w_saccades$text == 'TRIAL_START')
msg_w_saccades$text %>% grepl('TRIAL_START',.)
which(msg_w_saccades$text %>% grepl('TRIAL_START',.))
msg_w_saccades %<>% which(grepl('TRIAL_START',.))
msg_w_saccades %<>% .[which(grepl('TRIAL_START',.)),]
which(msg_w_saccades$text %>% grepl('TRIAL_START',.))
grepl("TRIAL_START",msg_w_saccades$text)
msg_w_saccades <- msg[which(msg$block %in% blocks),]
grepl("TRIAL_START",msg_w_saccades$text)
which(grepl("TRIAL_START",msg_w_saccades$text))
msg_w_saccades <- msg_w_saccades[which(grepl("TRIAL_START",msg_w_saccades$text)),]
View(msg_w_saccades)
View(saccade_w_button)
msg_w_saccades$text
strsplit(msg_w_saccades$text,' | ')
strsplit(msg_w_saccades$text,' | ', fixed = TRUE)
msg_w_saccades$trialN <- strsplit(msg_w_saccades$text,' | ', fixed = TRUE)[1]
msg_w_saccades$Condition <- strsplit(msg_w_saccades$text,' | ', fixed = TRUE)[2]
msg_w_saccades$TC <- strsplit(msg_w_saccades$text,' | ', fixed = TRUE)[3]
blocks <- saccade_w_button$block
msg_w_saccades <- msg[which(msg$block %in% blocks),]
msg_w_saccades <- msg_w_saccades[which(grepl("TRIAL_START",msg_w_saccades$text)),]
split_cols <- do.call(rbind, strsplit(msg_w_saccades$text, " | ", fixed = TRUE))
msg_w_saccades$trialN    <- split_cols[, 1]
msg_w_saccades$Condition <- split_cols[, 2]
msg_w_saccades$TC        <- split_cols[, 3]
msg_w_saccades$trialN %<>% gsub("TRIAL START ", '', .)
blocks <- saccade_w_button$block
msg_w_saccades <- msg[which(msg$block %in% blocks),]
msg_w_saccades <- msg_w_saccades[which(grepl("TRIAL_START",msg_w_saccades$text)),]
split_cols <- do.call(rbind, strsplit(msg_w_saccades$text, " | ", fixed = TRUE))
msg_w_saccades$trialN    <- split_cols[, 1]
msg_w_saccades$Condition <- split_cols[, 2]
msg_w_saccades$TC        <- split_cols[, 3]
msg_w_saccades$trialN %<>% gsub("TRIAL START ", '', .)
str(msg_w_saccades)
msg_w_saccades$text[1]
msg_w_saccades$trialN[1]
msg_w_saccades$trialN[1] %>% gsub('TRIAL_START ','',.)
blocks <- saccade_w_button$block
msg_w_saccades <- msg[which(msg$block %in% blocks),]
msg_w_saccades <- msg_w_saccades[which(grepl("TRIAL_START",msg_w_saccades$text)),]
split_cols <- do.call(rbind, strsplit(msg_w_saccades$text, " | ", fixed = TRUE))
msg_w_saccades$trialN    <- split_cols[, 1]
msg_w_saccades$Condition <- split_cols[, 2]
msg_w_saccades$TC        <- split_cols[, 3]
msg_w_saccades$trialN %<>% gsub("TRIAL_START ", '', .)
msg_w_saccades$CondShort <- car::recode(msg_w_saccades$Condition, recodes =
"'FarHighNarrow' = 'IN'; 'FarLowNarrow' = 'DN';
'FarHighWide' = 'IW'; 'FarLowWide' = 'DW';
'ThreeLinesControl' = 'Single'; 'Constant' = 'Constant'") %>% as.factor()
blocks <- saccade_w_button$block
msg_w_saccades <- msg[which(msg$block %in% blocks),]
msg_w_saccades <- msg_w_saccades[which(grepl("TRIAL_START",msg_w_saccades$text)),]
split_cols <- do.call(rbind, strsplit(msg_w_saccades$text, " | ", fixed = TRUE))
msg_w_saccades$trialN    <- split_cols[, 1]
msg_w_saccades$Condition <- split_cols[, 2]
msg_w_saccades$TC        <- split_cols[, 3]
msg_w_saccades$trialN %<>% gsub("TRIAL_START ", '', .)
msg_w_saccades <- subset(msg_w_saccades, !endsWith(Condition,"_null"))
msg_w_saccades$CondShort <- car::recode(msg_w_saccades$Condition, recodes =
"'FarHighNarrow' = 'IN'; 'FarLowNarrow' = 'DN';
'FarHighWide' = 'IW'; 'FarLowWide' = 'DW';
'ThreeLinesControl' = 'Single'; 'Constant' = 'Constant'") %>% as.factor()
button_w_saccade <- button_w_saccade[which(button_w_saccade$block %in% msg_w_saccades$block)]
library(purrr)
# Step 1: Find common block values
common_blocks <- reduce(
list(
button_w_saccade$block,
saccade_w_button$block,
msg_w_saccades$block
),
intersect
)
blocks
common_blocks
# Step 2: Filter all data frames
button_w_saccade_filt <- button_w_saccade %>% filter(block %in% common_blocks)
saccade_w_button_filt <- saccade_w_button %>% filter(block %in% common_blocks)
msg_w_saccades_filt   <- msg_w_saccades   %>% filter(block %in% common_blocks)
str(saccade_w_button_filt)
saccadeFinal <- saccade_w_button_filt %>% group_by(block) %>%
mutate(nSaccades = n(),
meamAmplitude = mean(ampl),
meanPeakVelocity = mean(pv),
meanDuration = mean(dur)) %>%
select(nSaccades,meamAmplitude,meanPeakVelocity,meanDuration,block) %>%
ungroup()
View(saccadeFinal)
saccadeFinal <- saccade_w_button_filt %>% group_by(block) %>%
mutate(nSaccades = n(),
meamAmplitude = mean(ampl),
meanPeakVelocity = mean(pv),
meanDuration = mean(dur)) %>%
select(nSaccades,meamAmplitude,meanPeakVelocity,meanDuration,block) %>%
ungroup() %>%
distinct()
View(saccadeFinal)
# Step 3: Combine them row-wise
all_data <- bind_rows(
button_w_saccade_filt,
saccade_w_button_filt,
msg_w_saccades_filt
)
# Step 3: Combine them row-wise
all_data <- bind_rows(
button_w_saccade_filt,
saccadeFinal,
msg_w_saccades_filt
)
View(button_w_saccade_filt)
View(msg_w_saccades_filt)
# Step 3: Combine them row-wise
all_data <- cbind(saccadeFinal,msg_w_saccades[c(4,5,6,7)])
View(all_data)
dataByCondition <- all_data %>% group_by(CondShort) %>%
mutate(nTrialsWithSaccade = n(),
grandMeanAmp = mean(meanAmplitude),
grandMeanVel = mean(meanPeakVelocity),
grandMeanDurt = mean(meanDuration),
meanSaccades = mean(nSaccades)) %>%
select(nTrialsWithSaccade,grandMeanVel,grandMeanDurt,grandMeanAmp,block,CondShort) %>%
ungroup() %>%
distinct()
saccadeFinal <- saccade_w_button_filt %>% group_by(block) %>%
mutate(nSaccades = n(),
meamAmplitude = mean(ampl),
meanPeakVelocity = mean(pv),
meanDuration = mean(dur)) %>%
select(nSaccades,meamAmplitude,meanPeakVelocity,meanDuration,block) %>%
ungroup() %>%
distinct()
# Step 3: Combine them row-wise
all_data <- cbind(saccadeFinal,msg_w_saccades[c(4,5,6,7)])
dataByCondition <- all_data %>% group_by(CondShort) %>%
mutate(nTrialsWithSaccade = n(),
grandMeanAmp = mean(meamAmplitude),
grandMeanVel = mean(meanPeakVelocity),
grandMeanDurt = mean(meanDuration),
meanSaccades = mean(nSaccades)) %>%
select(nTrialsWithSaccade,grandMeanVel,grandMeanDurt,grandMeanAmp,block,CondShort) %>%
ungroup() %>%
distinct()
View(dataByCondition)
?mean
# Step 3: Combine them row-wise
all_data <- cbind(saccadeFinal,msg_w_saccades[c(4,5,6,7)])
dataByCondition <- all_data %>% group_by(CondShort) %>%
mutate(nTrialsWithSaccade = n(),
grandMeanAmp = mean(meamAmplitude, na.rm = TRUE),
grandMeanVel = mean(meanPeakVelocity, na.rm = TRUE),
grandMeanDurt = mean(meanDuration, na.rm = TRUE),
meanSaccades = mean(nSaccades, na.rm = TRUE)) %>%
select(nTrialsWithSaccade,grandMeanVel,grandMeanDurt,grandMeanAmp,block,CondShort) %>%
ungroup() %>%
distinct()
# Step 3: Combine them row-wise
all_data <- cbind(saccadeFinal,msg_w_saccades[c(4,5,6,7)])
dataByCondition <- all_data %>% group_by(CondShort) %>%
mutate(nTrialsWithSaccade = n(),
grandMeanAmp = mean(meamAmplitude, na.rm = TRUE),
grandMeanVel = mean(meanPeakVelocity, na.rm = TRUE),
grandMeanDurt = mean(meanDuration, na.rm = TRUE),
meanSaccades = mean(nSaccades, na.rm = TRUE)) %>%
select(nTrialsWithSaccade,grandMeanVel,grandMeanDurt,grandMeanAmp,CondShort) %>%
ungroup() %>%
distinct()
# Step 3: Combine them row-wise
all_data <- cbind(saccadeFinal,msg_w_saccades[c(4,5,6,7)])
dataByCondition <- all_data %>% group_by(CondShort) %>%
mutate(nTrialsWithSaccade = n(),
grandMeanAmp = mean(meamAmplitude, na.rm = TRUE),
grandMeanVel = mean(meanPeakVelocity, na.rm = TRUE),
grandMeanDurt = mean(meanDuration, na.rm = TRUE),
meanSaccades = mean(nSaccades, na.rm = TRUE)) %>%
select(nTrialsWithSaccade,meanSaccades,grandMeanVel,grandMeanDurt,grandMeanAmp,CondShort) %>%
ungroup() %>%
distinct()
fileList <- list.files()
fileList
?changedirectory
?cd
??cwd
??cd
??change directory
??'change directory'
